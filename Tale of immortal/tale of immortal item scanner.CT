<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Item Info [Highlight Item *Visual Only]"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck then return end
LaunchMonoDataCollector()
{$asm}

[ENABLE]
//8B ?? ?? 33 ?? E8 ?? ?? ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 45 33 ?? 48 8B ?? 48 8B ?? E8 ?? ?? ?? ?? 48 8B ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 33 ?? E8 ?? ?? ?? ?? 48 8B ?? ?? 3D ?? ?? ?? ?? 0F 84 ?? ?? ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 33 ?? E8 ?? ?? ?? ?? 83 ?? ?? 0F 85 ?? ?? ?? ?? 48 8B ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 33 ?? E8 ?? ?? ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 81
aobscanmodule(propinfo,GameAssembly.dll,8B ?? ?? 33 ?? E8 ?? ?? ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 45 33 ?? 48 8B ?? 48 8B ?? E8 ?? ?? ?? ?? 48 8B ?? ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 33 ?? E8 ?? ?? ?? ?? 48 8B) // should be unique
alloc(newmem,$1000,propinfo)
alloc(propinfocopy,5)
alloc(_propinfo,8)
registersymbol(propinfo)
registersymbol(_propinfo)
registersymbol(propinfocopy)
label(code)
label(return)

propinfocopy:
  readmem(propinfo,5)
newmem:
  mov [_propinfo],rax
code:
  readmem(propinfo,5)
  jmp return

propinfo:
  jmp newmem
return:

[DISABLE]
propinfo:
  readmem(propinfocopy,5)
unregistersymbol(*)
dealloc(*)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Name"</Description>
          <VariableType>String</VariableType>
          <Length>128</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"baseID"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"grade"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>1C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"level"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"worth"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"worthSchoolMoney"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"sale"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"auction"</Description>
          <VariableType>Byte</VariableType>
          <Address>_propinfo</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Trainer Extender - Item Editor"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck then return end
LaunchMonoDataCollector()
{$asm}

[ENABLE]
//41 0F ?? ?? 41 8B ?? 8B ?? 4C ?? ?? 75 ?? 48 8D ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? 48 8D ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 ?? ?? ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? BA ?? ?? ?? ?? E8 ?? ?? ?? ?? 48 8B ?? 48 85 ?? 0F 84 ?? ?? ?? ?? 83 ?? ?? ?? 0F 86 ?? ?? ?? ?? 89 ?? ?? 48 8B ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? 44 8B ?? 48 C7 ?? ?? ?? ?? ?? ?? ?? 4C ?? ?? BA ?? ?? ?? ?? 48 8B ?? 48 8B ?? E8 ?? ?? ?? ?? 80 ?? ?? ?? ?? ?? ?? 75 ?? 48 8D
aobscanmodule(itemx,GameAssembly.dll,41 0F ?? ?? 41 8B ?? 8B FA 4C 8B) // should be unique
alloc(newmem,$1000,itemx)
alloc(_itemid,4)
alloc(_itemq,4)
alloc(itemxcopy,7)
registersymbol(itemx)
registersymbol(_itemid)
registersymbol(_itemq)
registersymbol(itemxcopy)
label(code)
label(return)

itemxcopy:
  readmem(itemx,7)
_itemid:
  dd 0
_itemq:
  dd 0
newmem:
  mov rdx,[_itemid]
  mov r8,[_itemq]
code:
  readmem(itemx,7)
  jmp return

itemx:
  jmp newmem
  nop 2
return:

[DISABLE]
itemx:
  readmem(itemxcopy,7)
unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Item ID [Edit the Value &amp; Freeze]"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>_itemid</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Quantity [Edit the Value &amp; Freeze]"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>_itemq</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
